---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.1-0.20211110210727-ab52f76cc7d1
  creationTimestamp: null
  name: microvmmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: MicrovmMachine
    listKind: MicrovmMachineList
    plural: microvmmachines
    singular: microvmmachine
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MicrovmMachine is the Schema for the microvmmachines API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MicrovmMachineSpec defines the desired state of MicrovmMachine.
            properties:
              initrd:
                description: Initrd is an optional initial ramdisk to use.
                properties:
                  filename:
                    description: Filename is the name of the file in the container
                      to use.
                    type: string
                  image:
                    description: Image is the container image to use.
                    type: string
                required:
                - image
                type: object
              kernel:
                description: Kernel specifies the kernel and its arguments to use.
                properties:
                  filename:
                    description: Filename is the name of the file in the container
                      to use.
                    type: string
                  image:
                    description: Image is the container image to use.
                    type: string
                required:
                - image
                type: object
              kernelCmdline:
                additionalProperties:
                  type: string
                description: KernelCmdLine are the additional args to use for the
                  kernel cmdline. Each MicroVM provider has its own recommended list,
                  they will be used automatically. This field is for additional values.
                type: object
              memoryMb:
                description: MemoryMb is the amount of memory in megabytes that the
                  microvm will be allocated.
                format: int64
                minimum: 1024
                type: integer
              networkInterfaces:
                description: NetworkInterfaces specifies the network interfaces attached
                  to the microvm.
                items:
                  description: NetworkInterface represents a network interface for
                    the microvm.
                  properties:
                    address:
                      description: Address is an optional IP address to assign to
                        this interface. If not supplied then DHCP will be used.
                      type: string
                    guestDeviceName:
                      description: GuestDeviceName is the name of the network interface
                        to create in the microvm.
                      type: string
                    guestMac:
                      description: GuestMAC allows the specifying of a specific MAC
                        address to use for the interface. If not supplied a autogenerated
                        MAC address will be used.
                      type: string
                    type:
                      description: Type is the type of host network interface type
                        to create to use by the guest.
                      enum:
                      - macvtap
                      - tap
                      type: string
                  required:
                  - guestDeviceName
                  - type
                  type: object
                minItems: 1
                type: array
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              rootVolume:
                description: RootVolume specifies the volume to use for the root of
                  the microvm.
                properties:
                  id:
                    description: ID is a unique identifier for this volume.
                    type: string
                  image:
                    description: Image is the container image to use for the volume.
                    type: string
                  mountPoint:
                    description: MountPoint is the mount point of the volume in the
                      machine.
                    type: string
                  readOnly:
                    default: false
                    description: ReadOnly specifies that the volume is to be mounted
                      readonly.
                    type: boolean
                required:
                - id
                - image
                type: object
              sshPublicKeys:
                description: SSHPublicKeys is list of SSH public keys that will be
                  used with stated users on this machine. If specified they will take
                  precedence over any SSH keys specified at the cluster level.
                items:
                  properties:
                    authorizedKeys:
                      description: AuthorizedKeys is a list of public keys to add
                        to the user
                      items:
                        type: string
                      type: array
                    user:
                      description: User is the name of the user to add keys for (eg
                        root, ubuntu).
                      type: string
                  type: object
                type: array
              vcpu:
                description: VCPU specifies how many vcpu's the microvm will be allocated.
                format: int64
                minimum: 1
                type: integer
              volumes:
                description: AdditionalVolumes specifies additional non-root volumes
                  to attach to the microvm.
                items:
                  description: Volume represents a volume to be attached to a microvm.
                  properties:
                    id:
                      description: ID is a unique identifier for this volume.
                      type: string
                    image:
                      description: Image is the container image to use for the volume.
                      type: string
                    mountPoint:
                      description: MountPoint is the mount point of the volume in
                        the machine.
                      type: string
                    readOnly:
                      default: false
                      description: ReadOnly specifies that the volume is to be mounted
                        readonly.
                      type: boolean
                  required:
                  - id
                  - image
                  type: object
                type: array
            required:
            - kernel
            - memoryMb
            - networkInterfaces
            - rootVolume
            - vcpu
            type: object
          status:
            description: MicrovmMachineStatus defines the observed state of MicrovmMachine.
            properties:
              addresses:
                description: Addresses contains the microvm associated addresses.
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the MicrovmMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                type: string
              ready:
                default: false
                description: Ready is true when the provider resource is ready.
                type: boolean
              vmState:
                description: VMState indicates the state of the microvm.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
